{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/Web/react-quiz/src/Containers/Quiz/Quiz.js\";\nimport react, { Component } from \"react\";\nimport classes from '../Quiz/Quiz.module.css';\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz';\nimport FinishedQuiz from '../../Components/FinishedQuiz/FinishedQuiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      results: {},\n      isFinished: false,\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [{\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий ',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        question: 'В каком году основали Киев?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [{\n          text: '895',\n          id: 1\n        }, {\n          text: '1 ',\n          id: 2\n        }, {\n          text: '482',\n          id: 3\n        }, {\n          text: '2000',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n      const results = this.state.results;\n\n      if (question.rightAnswerId === answerId) {\n        if (!results[question.id]) {\n          results[question.id] = 'success';\n        }\n\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          },\n          results\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            this.setState({\n              isFinished: true\n            });\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        results[question.id] = 'error';\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          },\n          results\n        });\n      }\n    };\n\n    this.retryHandler = () => {\n      this.setState({\n        activeQuestion: 0,\n        answerState: null,\n        isFinished: null,\n        results: {}\n      });\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), this.state.isFinished ? /*#__PURE__*/_jsxDEV(FinishedQuiz, {\n          results: this.state.results,\n          quiz: this.state.quiz,\n          onRetry: this.retryHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[this.state.activeQuestion].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLenght: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/Containers/Quiz/Quiz.js"],"names":["react","Component","classes","ActiveQuiz","FinishedQuiz","Quiz","state","results","isFinished","activeQuestion","answerState","quiz","question","rightAnswerId","id","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","length","render","QuizWrapper"],"mappings":"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","sourcesContent":["import react, { Component } from \"react\";\nimport classes from '../Quiz/Quiz.module.css'\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz'\nimport FinishedQuiz from '../../Components/FinishedQuiz/FinishedQuiz'\n\n\nclass Quiz extends Component {\n    state = {\n        results: {},\n        isFinished: false,\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [\n            {\n                question: 'Какого цвета небо?',\n                rightAnswerId: 2,\n                id: 1,\n                answers: [\n                    { text: 'Черный', id: 1 },\n                    { text: 'Синий ', id: 2 },\n                    { text: 'Красный', id: 3 },\n                    { text: 'Зеленый', id: 4 },\n                ]\n            },\n            {\n                question: 'В каком году основали Киев?',\n                rightAnswerId: 3,\n                id: 2,\n                answers: [\n                    { text: '895', id: 1 },\n                    { text: '1 ', id: 2 },\n                    { text: '482', id: 3 },\n                    { text: '2000', id: 4 },\n                ]\n            }\n        ]\n    }\n\n\n    onAnswerClickHandler = (answerId) => {\n\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        const results = this.state.results\n\n        if (question.rightAnswerId === answerId) {\n            if (!results[question.id]) {\n                results[question.id] = 'success'\n            }\n\n            this.setState({\n                answerState: { [answerId]: 'success' },\n                results\n            })\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    this.setState({\n                        isFinished: true\n                    })\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            results[question.id] = 'error'\n            this.setState({\n                answerState: { [answerId]: 'error' },\n                results\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    retryHandler = () => {\n        this.setState({\n            activeQuestion: 0,\n            answerState: null,\n            isFinished: null,\n            results: {}\n        })\n    }\n\n\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n                    {\n                        this.state.isFinished\n                            ? <FinishedQuiz\n                                results={this.state.results}\n                                quiz={this.state.quiz}\n                                onRetry={this.retryHandler}\n                            />\n                            : <ActiveQuiz\n                                answers={this.state.quiz[this.state.activeQuestion].answers}\n                                question={this.state.quiz[this.state.activeQuestion].question}\n                                onAnswerClick={this.onAnswerClickHandler}\n                                quizLenght={this.state.quiz.length}\n                                answerNumber={this.state.activeQuestion + 1}\n                                state={this.state.answerState}\n                            />\n                    }\n\n                </div>\n            </div>\n        )\n    }\n}\nexport default Quiz"]},"metadata":{},"sourceType":"module"}