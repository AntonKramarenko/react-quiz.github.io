{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/Web/react-quiz/src/Containers/Auth/Auth.js\";\nimport React, { Component } from \"react\";\nimport classes from './Auth.module.css';\nimport Button from \"../../Components/UI/Button/Button\";\nimport Input from \"../../Components/UI/Input/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Auth extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      formControls: {\n        email: {\n          value: '',\n          type: 'email',\n          label: 'Email',\n          errorMessage: 'Введите коректный имейл',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            email: true\n          }\n        },\n        password: {\n          value: '',\n          type: 'password',\n          label: 'Пароль',\n          errorMessage: 'Введите коректный пароль',\n          valid: false,\n          touched: false,\n          validation: {\n            required: true,\n            minLength: 6\n          }\n        }\n      }\n    };\n\n    this.loginHandler = () => {};\n\n    this.registerHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n  }\n\n  validateControl(value, validation) {\n    if (!validation) {\n      return true;\n    }\n\n    let isValid = true;\n\n    if (validation.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (validation.email) {}\n\n    if (validation.minLength) {}\n\n    return isValid;\n  }\n\n  onChangeHandler(event, controlName) {\n    console.log(`${controlName}:`, event.target.value);\n    const formControls = { ...this.state.formControls\n    };\n    const control = { ...formControls[controlName]\n    };\n    control.value = event.target.value;\n    control.touched = true;\n    control.valid = this.validateControl(control.value, control.validation);\n    formControls[controlName] = control;\n    this.setState({\n      formControls\n    });\n  }\n\n  renderInputs() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Input, {\n        type: control.type,\n        defaultValue: control.value,\n        valid: control.valid,\n        touched: control.touched,\n        label: control.label,\n        shouldValidate: !!control.validation,\n        errorMessage: control.errorMessage,\n        onChange: event => this.onChangeHandler(event, controlName)\n      }, controlName + index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Auth,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.AuthForm,\n          onSubmit: this.submitHandler,\n          children: [this.renderInputs(), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.loginHandler,\n            children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.registerHandler,\n            children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/Containers/Auth/Auth.js"],"names":["React","Component","classes","Button","Input","Auth","state","formControls","email","value","type","label","errorMessage","valid","touched","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","validateControl","isValid","trim","onChangeHandler","controlName","console","log","target","control","setState","renderInputs","Object","keys","map","index","render","AuthForm"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from './Auth.module.css'\nimport Button from \"../../Components/UI/Button/Button\";\nimport Input from \"../../Components/UI/Input/Input\";\n\n\nexport default class Auth extends Component {\n\n    state = {\n        formControls: {\n            email: {\n                value: '',\n                type: 'email',\n                label: 'Email',\n                errorMessage: 'Введите коректный имейл',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    email: true\n                }\n            },\n            password: {\n                value: '',\n                type: 'password',\n                label: 'Пароль',\n                errorMessage: 'Введите коректный пароль',\n                valid: false,\n                touched: false,\n                validation: {\n                    required: true,\n                    minLength: 6\n                }\n            }\n        }\n    }\n\n    loginHandler = () => {\n\n    }\n\n    registerHandler = () => {\n\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    validateControl(value, validation) {\n        if (!validation) {\n            return true\n        }\n        let isValid = true\n\n        if (validation.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n        if (validation.email) {\n\n        }\n        if (validation.minLength) {\n\n        }\n\n\n\n        return isValid\n    }\n\n    onChangeHandler(event, controlName) {\n        console.log(`${controlName}:`, event.target.value)\n\n        const formControls = { ...this.state.formControls }\n        const control = { ...formControls[controlName] }\n\n        control.value = event.target.value\n        control.touched = true\n        control.valid = this.validateControl(control.value, control.validation)\n\n        formControls[controlName] = control\n\n        this.setState({\n            formControls\n        })\n    }\n\n\n    renderInputs() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n            return (\n                <Input\n                    key={controlName + index}\n                    type={control.type}\n                    defaultValue={control.value}\n                    valid={control.valid}\n                    touched={control.touched}\n                    label={control.label}\n                    shouldValidate={!!control.validation}\n                    errorMessage={control.errorMessage}\n                    onChange={event => this.onChangeHandler(event, controlName)}\n\n                />\n\n            )\n        })\n    }\n\n\n    render() {\n        return (\n            <div className={classes.Auth}>\n                <div>\n                    <h1>Авторизация</h1>\n\n                    <form\n                        className={classes.AuthForm}\n                        onSubmit={this.submitHandler}\n                    >\n\n                        {this.renderInputs()}\n\n\n                        <Button\n                            type='success'\n                            onClick={this.loginHandler}\n                        >\n                            Войти\n                        </Button>\n\n                        <Button\n                            type='primary'\n                            onClick={this.registerHandler}\n                        >\n                            Зарегистрироваться\n                        </Button>\n\n                    </form>\n\n                </div>\n\n            </div >\n        )\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}