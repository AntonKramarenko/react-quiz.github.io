{"ast":null,"code":"export function createControl(config, validation) {\n  return { ...config,\n    validation,\n    valid: !validation,\n    touched: false,\n    value: ''\n  };\n}\nexport function validate(value) {\n  let validation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (!validation) {\n    return true;\n  }\n\n  let isValid = true;\n\n  if (validation.required) {\n    isValid = value.trim() !== '' && isValid;\n  }\n\n  return isValid;\n}\nexport function validateForm(formControls) {\n  let isFormValid = true;\n\n  for (let control in formControls) {\n    if (formControls.hasOnProperty(control)) {\n      isFormValid = formControls[control].valid && isFormValid;\n    }\n  }\n\n  return isFormValid;\n}","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/form/formFramework.js"],"names":["createControl","config","validation","valid","touched","value","validate","isValid","required","trim","validateForm","formControls","isFormValid","control","hasOnProperty"],"mappings":"AAAA,OAAO,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AAC9C,SAAO,EACH,GAAGD,MADA;AAEHC,IAAAA,UAFG;AAGHC,IAAAA,KAAK,EAAE,CAACD,UAHL;AAIHE,IAAAA,OAAO,EAAE,KAJN;AAKHC,IAAAA,KAAK,EAAE;AALJ,GAAP;AAOH;AAED,OAAO,SAASC,QAAT,CAAkBD,KAAlB,EAA4C;AAAA,MAAnBH,UAAmB,uEAAN,IAAM;;AAC/C,MAAI,CAACA,UAAL,EAAiB;AACb,WAAO,IAAP;AACH;;AAED,MAAIK,OAAO,GAAG,IAAd;;AAEA,MAAIL,UAAU,CAACM,QAAf,EAAyB;AACrBD,IAAAA,OAAO,GAAGF,KAAK,CAACI,IAAN,OAAiB,EAAjB,IAAuBF,OAAjC;AACH;;AAED,SAAOA,OAAP;AACH;AAED,OAAO,SAASG,YAAT,CAAsBC,YAAtB,EAAoC;AACvC,MAAIC,WAAW,GAAG,IAAlB;;AAEA,OAAK,IAAIC,OAAT,IAAoBF,YAApB,EAAkC;AAC9B,QAAIA,YAAY,CAACG,aAAb,CAA2BD,OAA3B,CAAJ,EAAyC;AACrCD,MAAAA,WAAW,GAAGD,YAAY,CAACE,OAAD,CAAZ,CAAsBV,KAAtB,IAA+BS,WAA7C;AAEH;AACJ;;AAED,SAAOA,WAAP;AACH","sourcesContent":["export function createControl(config, validation) {\n    return {\n        ...config,\n        validation,\n        valid: !validation,\n        touched: false,\n        value: ''\n    }\n}\n\nexport function validate(value, validation = null) {\n    if (!validation) {\n        return true\n    }\n\n    let isValid = true\n\n    if (validation.required) {\n        isValid = value.trim() !== '' && isValid\n    }\n\n    return isValid\n}\n\nexport function validateForm(formControls) {\n    let isFormValid = true\n\n    for (let control in formControls) {\n        if (formControls.hasOnProperty(control)) {\n            isFormValid = formControls[control].valid && isFormValid\n\n        }\n    }\n\n    return isFormValid\n}"]},"metadata":{},"sourceType":"module"}