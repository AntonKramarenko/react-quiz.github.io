{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/Web/react-quiz/src/Containers/QuizCreator/QuizCreator.js\";\nimport React, { Component } from \"react\";\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../Components/UI/Button/Button\";\nimport { createControl } from '../../form/formFramework';\nimport Input from \"../../Components/UI/Input/Input\";\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createOptionControl(number) {\n  return createControl({\n    label: `Вариант ${number}`,\n    errorMassage: 'значение не может быть пустым',\n    id: number\n  }, {\n    requared: true\n  });\n}\n\nfunction createFormControls() {\n  return {\n    question: createControl({\n      label: 'Введите вопрос',\n      errorMassage: 'Вопрос не может быть пустым'\n    }, {\n      requared: true\n    }),\n    option1: createOptionControl(1),\n    option2: createOptionControl(2),\n    option3: createOptionControl(3),\n    option4: createOptionControl(4)\n  };\n}\n\nexport default class QuizCreator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quiz: [],\n      formControls: createFormControls()\n    };\n\n    this.addQuestionHandler = () => {};\n\n    this.createQuizHandler = () => {};\n\n    this.submitHandler = event => {\n      event.preventDefault();\n    };\n\n    this.changeHandler = (value, controlName) => {};\n  }\n\n  renderControls() {\n    return Object.keys(this.state.formControls).map((controlName, index) => {\n      const control = this.state.formControls[controlName];\n      return /*#__PURE__*/_jsxDEV(Auxiliary, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          label: control.label,\n          value: control.value,\n          valid: control.valid,\n          shouldValidate: !!control.validation,\n          touched: control.touched,\n          errorMwssege: control.errorMwssege,\n          onChange: event => this.changeHandler(event.target.value, controlName)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), index === 0 ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 36\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.QuizCreator,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0442\\u0435\\u0441\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitHandler,\n          children: [this.renderControls(), /*#__PURE__*/_jsxDEV(\"select\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: this.addQuestionHandler,\n            children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"success\",\n            onClick: this.createQuizHandler,\n            children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u0442\\u0435\\u0441\\u0442\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/Containers/QuizCreator/QuizCreator.js"],"names":["React","Component","classes","Button","createControl","Input","Auxiliary","createOptionControl","number","label","errorMassage","id","requared","createFormControls","question","option1","option2","option3","option4","QuizCreator","state","quiz","formControls","addQuestionHandler","createQuizHandler","submitHandler","event","preventDefault","changeHandler","value","controlName","renderControls","Object","keys","map","index","control","valid","validation","touched","errorMwssege","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from './QuizCreator.module.css';\nimport Button from \"../../Components/UI/Button/Button\";\nimport { createControl } from '../../form/formFramework';\nimport Input from \"../../Components/UI/Input/Input\";\nimport Auxiliary from '../../hoc/Auxiliary/Auxiliary'\n\n\nfunction createOptionControl(number) {\n    return createControl({\n        label: `Вариант ${number}`,\n        errorMassage: 'значение не может быть пустым',\n        id: number\n    }, { requared: true })\n}\n\nfunction createFormControls() {\n    return {\n        question: createControl({\n            label: 'Введите вопрос',\n            errorMassage: 'Вопрос не может быть пустым'\n        }, { requared: true }),\n\n        option1: createOptionControl(1),\n\n        option2: createOptionControl(2),\n\n        option3: createOptionControl(3),\n\n        option4: createOptionControl(4),\n    }\n\n}\n\n\nexport default class QuizCreator extends Component {\n\n    state = {\n        quiz: [],\n        formControls: createFormControls()\n    }\n\n    addQuestionHandler = () => {\n\n    }\n\n    createQuizHandler = () => {\n\n    }\n\n    submitHandler = event => {\n        event.preventDefault()\n    }\n\n    changeHandler = (value, controlName) => {\n\n    }\n\n    renderControls() {\n        return Object.keys(this.state.formControls).map((controlName, index) => {\n            const control = this.state.formControls[controlName]\n\n            return (\n                <Auxiliary>\n                    <Input\n                        label={control.label}\n                        value={control.value}\n                        valid={control.valid}\n                        shouldValidate={!!control.validation}\n                        touched={control.touched}\n                        errorMwssege={control.errorMwssege}\n                        onChange={event => this.changeHandler(event.target.value, controlName)}\n                    />\n                    {index === 0 ? <hr /> : null}\n                </Auxiliary>\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className={classes.QuizCreator}>\n\n                <div>\n                    <h1>Создание теста</h1>\n\n                    <form onSubmit={this.submitHandler}>\n\n                        {this.renderControls()}\n\n\n                        <select></select>\n\n                        <Button\n                            type='primary'\n                            onClick={this.addQuestionHandler}\n                        >\n                            Добавить вопрос\n                        </Button>\n\n                        <Button\n                            type='success'\n                            onClick={this.createQuizHandler}\n                        >\n                            Создать тест\n                        </Button>\n\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}