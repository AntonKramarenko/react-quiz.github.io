{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/Web/react-quiz/src/Containers/Quiz/Quiz.js\";\nimport react, { Component } from \"react\";\nimport classes from '../Quiz/Quiz.module.css';\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      activeQuestion: 0,\n      answerState: null,\n      quiz: [{\n        question: 'Какого цвета небо?',\n        rightAnswerId: 2,\n        id: 1,\n        answers: [{\n          text: 'Черный',\n          id: 1\n        }, {\n          text: 'Синий ',\n          id: 2\n        }, {\n          text: 'Красный',\n          id: 3\n        }, {\n          text: 'Зеленый',\n          id: 4\n        }]\n      }, {\n        question: 'В каком году основали Киев?',\n        rightAnswerId: 3,\n        id: 2,\n        answers: [{\n          text: '895',\n          id: 1\n        }, {\n          text: '1 ',\n          id: 2\n        }, {\n          text: '482',\n          id: 3\n        }, {\n          text: '2000',\n          id: 4\n        }]\n      }]\n    };\n\n    this.onAnswerClickHandler = answerId => {\n      if (this.state.answerState) {\n        const key = Object.keys(this.state.answerState)[0];\n\n        if (this.state.answerState[key] === 'success') {\n          return;\n        }\n      }\n\n      const question = this.state.quiz[this.state.activeQuestion];\n\n      if (question.rightAnswerId === answerId) {\n        this.setState({\n          answerState: {\n            [answerId]: 'success'\n          }\n        });\n        const timeout = window.setTimeout(() => {\n          if (this.isQuizFinished()) {\n            console.log('Finished');\n          } else {\n            this.setState({\n              activeQuestion: this.state.activeQuestion + 1,\n              answerState: null\n            });\n          }\n\n          window.clearTimeout(timeout);\n        }, 1000);\n      } else {\n        this.setState({\n          answerState: {\n            [answerId]: 'error'\n          }\n        });\n      }\n    };\n  }\n\n  isQuizFinished() {\n    return this.state.activeQuestion + 1 === this.state.quiz.length;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Quiz,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.QuizWrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u041E\\u0442\\u0432\\u0435\\u0442\\u044C\\u0442\\u0435 \\u043D\\u0430 \\u0432\\u0441\\u0435 \\u0432\\u043E\\u043F\\u0440\\u043E\\u0441\\u044B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ActiveQuiz, {\n          answers: this.state.quiz[this.state.activeQuestion].answers,\n          question: this.state.quiz[this.state.activeQuestion].question,\n          onAnswerClick: this.onAnswerClickHandler,\n          quizLenght: this.state.quiz.length,\n          answerNumber: this.state.activeQuestion + 1,\n          state: this.state.answerState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/Containers/Quiz/Quiz.js"],"names":["react","Component","classes","ActiveQuiz","Quiz","state","activeQuestion","answerState","quiz","question","rightAnswerId","id","answers","text","onAnswerClickHandler","answerId","key","Object","keys","setState","timeout","window","setTimeout","isQuizFinished","console","log","clearTimeout","length","render","QuizWrapper"],"mappings":"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","sourcesContent":["import react, { Component } from \"react\";\nimport classes from '../Quiz/Quiz.module.css'\nimport ActiveQuiz from '../../Components/ActiveQuiz/ActiveQuiz'\n\n\nclass Quiz extends Component {\n    state = {\n        activeQuestion: 0,\n        answerState: null,\n        quiz: [\n            {\n                question: 'Какого цвета небо?',\n                rightAnswerId: 2,\n                id: 1,\n                answers: [\n                    { text: 'Черный', id: 1 },\n                    { text: 'Синий ', id: 2 },\n                    { text: 'Красный', id: 3 },\n                    { text: 'Зеленый', id: 4 },\n                ]\n            },\n            {\n                question: 'В каком году основали Киев?',\n                rightAnswerId: 3,\n                id: 2,\n                answers: [\n                    { text: '895', id: 1 },\n                    { text: '1 ', id: 2 },\n                    { text: '482', id: 3 },\n                    { text: '2000', id: 4 },\n                ]\n            }\n        ]\n    }\n\n\n    onAnswerClickHandler = (answerId) => {\n\n        if (this.state.answerState) {\n            const key = Object.keys(this.state.answerState)[0]\n\n            if (this.state.answerState[key] === 'success') {\n                return\n            }\n        }\n\n        const question = this.state.quiz[this.state.activeQuestion]\n        if (question.rightAnswerId === answerId) {\n\n            this.setState({\n                answerState: { [answerId]: 'success' }\n            })\n\n            const timeout = window.setTimeout(() => {\n                if (this.isQuizFinished()) {\n                    console.log('Finished')\n                } else {\n                    this.setState({\n                        activeQuestion: this.state.activeQuestion + 1,\n                        answerState: null\n                    })\n                }\n\n                window.clearTimeout(timeout)\n            }, 1000)\n        } else {\n            this.setState({\n                answerState: { [answerId]: 'error' }\n            })\n        }\n    }\n\n    isQuizFinished() {\n        return this.state.activeQuestion + 1 === this.state.quiz.length\n    }\n\n    render() {\n        return (\n            <div className={classes.Quiz}>\n\n                <div className={classes.QuizWrapper}>\n                    <h1>Ответьте на все вопросы</h1>\n                    <ActiveQuiz\n                        answers={this.state.quiz[this.state.activeQuestion].answers}\n                        question={this.state.quiz[this.state.activeQuestion].question}\n                        onAnswerClick={this.onAnswerClickHandler}\n                        quizLenght={this.state.quiz.length}\n                        answerNumber={this.state.activeQuestion + 1}\n                        state={this.state.answerState}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\nexport default Quiz"]},"metadata":{},"sourceType":"module"}