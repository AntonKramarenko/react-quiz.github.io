{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/Web/react-quiz/src/Components/FinishedQuiz/FinishedQuiz.js\";\nimport react from \"react\";\nimport classes from '../FinishedQuiz/FinishedQuiz.module.css';\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FinishedQuiz = props => {\n  const successCount = Object.keys(props.results).reduce((total, key) => {\n    if (props.results[key] === 'success') {\n      total++;\n    }\n\n    return total;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.FinishedQuiz,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.quiz.map((quizItem, index) => {\n        const cls = ['fa', props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check', classes[props.results[quizItem.id]]];\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), \" .\\xA0\", quizItem.question, /*#__PURE__*/_jsxDEV(\"i\", {\n            className: cls.join(' ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041F\\u0440\\u0430\\u0432\\u0438\\u043B\\u044C\\u043D\\u043E \", successCount, \" \\u0438\\u0437 \", props.quiz.length, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onRetry,\n        type: \"primary\",\n        children: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0438\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onRetry,\n        type: \"success\",\n        children: \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FinishedQuiz;\nexport default FinishedQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"FinishedQuiz\");","map":{"version":3,"sources":["/Users/anton/Desktop/Web/react-quiz/src/Components/FinishedQuiz/FinishedQuiz.js"],"names":["react","classes","Button","FinishedQuiz","props","successCount","Object","keys","results","reduce","total","key","quiz","map","quizItem","index","cls","id","question","join","length","onRetry"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,yCAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAE1B,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,OAAlB,EAA2BC,MAA3B,CAAkC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnE,QAAIP,KAAK,CAACI,OAAN,CAAcG,GAAd,MAAuB,SAA3B,EAAsC;AAClCD,MAAAA,KAAK;AACR;;AACD,WAAOA,KAAP;AACH,GALoB,EAKlB,CALkB,CAArB;AAOA,sBACI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACE,YAAxB;AAAA,4BACI;AAAA,gBACKC,KAAK,CAACQ,IAAN,CAAWC,GAAX,CAAe,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjC,cAAMC,GAAG,GAAG,CACR,IADQ,EAERZ,KAAK,CAACI,OAAN,CAAcM,QAAQ,CAACG,EAAvB,MAA+B,OAA/B,GAAyC,UAAzC,GAAsD,UAF9C,EAGRhB,OAAO,CAACG,KAAK,CAACI,OAAN,CAAcM,QAAQ,CAACG,EAAvB,CAAD,CAHC,CAAZ;AAMA,4BACI;AAAA,kCACI;AAAA,sBAASF,KAAK,GAAG;AAAjB;AAAA;AAAA;AAAA;AAAA,kBADJ,YAEKD,QAAQ,CAACI,QAFd,eAGI;AAAG,YAAA,SAAS,EAAEF,GAAG,CAACG,IAAJ,CAAS,GAAT;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAASJ,KAAT;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OAdA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAkBI;AAAA,4EAAcV,YAAd,oBAAgCD,KAAK,CAACQ,IAAN,CAAWQ,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAoBI;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEhB,KAAK,CAACiB,OAAvB;AAAgC,QAAA,IAAI,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEjB,KAAK,CAACiB,OAAvB;AAAgC,QAAA,IAAI,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CArCD;;KAAMlB,Y;AAuCN,eAAeA,YAAf","sourcesContent":["import react from \"react\";\nimport classes from '../FinishedQuiz/FinishedQuiz.module.css';\nimport Button from \"../UI/Button/Button\";\n\n\nconst FinishedQuiz = props => {\n\n    const successCount = Object.keys(props.results).reduce((total, key) => {\n        if (props.results[key] === 'success') {\n            total++\n        }\n        return total\n    }, 0)\n\n    return (\n        <div className={classes.FinishedQuiz}>\n            <ul>\n                {props.quiz.map((quizItem, index) => {\n                    const cls = [\n                        'fa',\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\n                        classes[props.results[quizItem.id]]\n                    ]\n\n                    return (\n                        <li key={index}>\n                            <strong>{index + 1}</strong> .&nbsp;\n                            {quizItem.question}\n                            <i className={cls.join(' ')} />\n                        </li>\n                    )\n                })}\n            </ul>\n            <p>Правильно {successCount} из {props.quiz.length} </p>\n\n            <div>\n                <Button onClick={props.onRetry} type='primary' >Повторить</Button>\n                <Button onClick={props.onRetry} type='success' >Перейти в список тестов</Button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default FinishedQuiz"]},"metadata":{},"sourceType":"module"}